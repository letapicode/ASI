# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: reasoning_graph.proto
# Protobuf Python Version: 6.31.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    0,
    '',
    'reasoning_graph.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15reasoning_graph.proto\x12\x03\x61si\"Y\n\tNodeEntry\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04text\x18\x02 \x01(\t\x12\r\n\x05\x65\x64ges\x18\x03 \x03(\t\x12\x10\n\x08metadata\x18\x04 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\x03\"*\n\tNodeBatch\x12\x1d\n\x05items\x18\x01 \x03(\x0b\x32\x0e.asi.NodeEntry\"\x17\n\tPushReply\x12\n\n\x02ok\x18\x01 \x01(\x08\x32\x94\x01\n\x15ReasoningGraphService\x12&\n\x04Push\x12\x0e.asi.NodeEntry\x1a\x0e.asi.PushReply\x12+\n\tPushBatch\x12\x0e.asi.NodeBatch\x1a\x0e.asi.PushReply\x12&\n\x04Sync\x12\x0e.asi.NodeBatch\x1a\x0e.asi.PushReplyb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'reasoning_graph_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_NODEENTRY']._serialized_start=30
  _globals['_NODEENTRY']._serialized_end=119
  _globals['_NODEBATCH']._serialized_start=121
  _globals['_NODEBATCH']._serialized_end=163
  _globals['_PUSHREPLY']._serialized_start=165
  _globals['_PUSHREPLY']._serialized_end=188
  _globals['_REASONINGGRAPHSERVICE']._serialized_start=191
  _globals['_REASONINGGRAPHSERVICE']._serialized_end=339
# @@protoc_insertion_point(module_scope)
